import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from pyod.models.iforest import IForest
import matplotlib.pyplot as plt


# 1. 加载数据（假设数据无列名）
data = pd.read_csv("C:\\Users\\46686\\Desktop\\new.txt", header=None, 
                  names=['trip_time', 'distance'])




# 2. 数据标准化（必须步骤）
scaler = StandardScaler()
X_scaled = scaler.fit_transform(data[['trip_time', 'distance']])


clf = IForest(
    n_estimators=100,  # 树的数量
    max_samples='auto',  # 每棵树的样本数
    contamination=0.05,  # 异常值比例估计
    random_state=42
)

clf.fit(X_scaled)
y_pred = clf.predict(X_scaled)
y_scores = clf.decision_function(X_scaled)

data['is_anomaly'] = y_pred
data['anomaly_score'] = y_scores

# 5. 分析结果
normal = data[data['is_anomaly'] == 0]
anomalies = data[data['is_anomaly'] == 1]
print(f"there are {len(anomalies)} anomaly points")
print("anomaly")
print( anomalies)
print("normal")
print (normal)
# 6. 可视化
plt.figure(figsize=(12, 7))
# 绘制异常点（红色标记）
plt.scatter(anomalies['trip_time'], anomalies['distance'], 
           c='red', s=1, label='Anomaly')

# 绘制正常点（蓝色半透明小点）
plt.scatter(normal['trip_time'], normal['distance'], 
           c='blue', s=1, label='Normal')


# 美化图形
plt.xlabel('Trip Time (min)', fontsize=12)
plt.ylabel('Distance (km)', fontsize=12)
plt.title('Taxi Trip Anomaly Detection (PyOD isolation forest)', fontsize=14)
plt.legend(loc='upper right')
plt.grid(True, linestyle='--', alpha=0.3)

plt.tight_layout()
plt.show()
